esphome:
  name: esphome-eqiva-lock
  friendly_name: ESPHome Eqiva Lock

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:
  
# Enable Home Assistant API
api:
  encryption:
    key: "yourkey"
  services:
  - service: connect
    variables:
      # mac_address: string // Unable to pass a mac_address via lambda :?
      user_id: int
      user_key: string
    then:
      - eqiva_key_ble.connect:
          mac_address: 00:12:34:56:42:88
          # mac_address: !lambda 'return mac_address;'
          user_id: !lambda 'return user_id;'
          user_key: !lambda 'return user_key;'
  - service: disconnect
    then:
      - eqiva_key_ble.disconnect:
  - service: pair
    variables:
      card_key: string
    then:
      - eqiva_key_ble.pair:
          card_key: !lambda 'return card_key;'
  - service: lock
    then:
      - eqiva_key_ble.lock:
  - service: unlock
    then:
      - eqiva_key_ble.unlock:
  - service: open
    then:
      - eqiva_key_ble.open:
  - service: status
    then:
      - eqiva_key_ble.status:
ota:

web_server:
  include_internal: true
  local: true
  port: 80


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-Eqiva-Lock"
    password: "LMLtYr4bSiPg"

captive_portal:
    
external_components:
  source: github://digaus/esphome-components-eqiva

esp32_ble_tracker:
  scan_parameters:
    window: 300ms

eqiva_ble:

eqiva_key_ble:
  id: key_ble
  # Below are optional and can be passed via new connect service
  mac_address: 00:12:34:56:42:88
  user_id: 0
  user_key: 12345678636F6763386A726E33746F35


text_sensor: 
  - platform: eqiva_key_ble
    lock_status: 
      name: "Lock Status"
    low_battery:
      name: "Low Battery"
    lock_ble_state:
      name: "Lock BLE State"
    user_id:
      name: "User ID"
    user_key:
      name: "User Key"
    # on_raw_value:
            # then:   Do stuff on state change (!lambda "return x") 